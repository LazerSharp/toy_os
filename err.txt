   Compiling spin v0.5.2
   Compiling bootloader v0.9.23
   Compiling volatile v0.2.7
error[E0152]: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sized`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /Users/barun/code-gym/rust/toy_os/target/x86_64-toy_os/debug/deps/libcore-3c21e8501b4612e9.rmeta
  = note: second definition in `core` loaded from /Users/barun/code-gym/rust/toy_os/target/x86_64-toy_os/debug/deps/libcore-b1578c1792d789b0.rmeta

error[E0152]: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sized`.
  |
  = note: the lang item is first defined in crate `core` (which `bootloader` depends on)
  = note: first definition in `core` loaded from /Users/barun/code-gym/rust/toy_os/target/x86_64-toy_os/debug/deps/libcore-3c21e8501b4612e9.rmeta
  = note: second definition in `core` loaded from /Users/barun/code-gym/rust/toy_os/target/x86_64-toy_os/debug/deps/libcore-b1578c1792d789b0.rmeta

error[E0152]: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sized`.
  |
  = note: the lang item is first defined in crate `core` (which `volatile` depends on)
  = note: first definition in `core` loaded from /Users/barun/code-gym/rust/toy_os/target/x86_64-toy_os/debug/deps/libcore-3c21e8501b4612e9.rmeta
  = note: second definition in `core` loaded from /Users/barun/code-gym/rust/toy_os/target/x86_64-toy_os/debug/deps/libcore-b1578c1792d789b0.rmeta

error[E0277]: the size for values of type `Mutex<T>` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs:211:27
    |
211 | impl<T: ?Sized + Default> Default for Mutex<T> {
    |                           ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Mutex<T>`
note: required by a bound in `Default`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `Volatile<T>` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.2.7/src/lib.rs:37:17
    |
37  | #[derive(Debug, Default)]
    |                 ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Volatile<T>`
note: required by a bound in `Default`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `TlsTemplate` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/mod.rs:103:17
    |
103 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `TlsTemplate`
note: required by a bound in `Clone`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Volatile<T>` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.2.7/src/lib.rs:145:15
    |
145 | impl<T: Copy> Clone for Volatile<T> {
    |               ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Volatile<T>`
note: required by a bound in `Clone`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`

error[E0277]: the size for values of type `ReadOnly<T>` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.2.7/src/lib.rs:154:17
    |
154 | #[derive(Debug, Clone, Default)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `ReadOnly<T>`
note: required by a bound in `Clone`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `ReadOnly<T>` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.2.7/src/lib.rs:154:24
    |
154 | #[derive(Debug, Clone, Default)]
    |                        ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `ReadOnly<T>`
note: required by a bound in `Default`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `WriteOnly<T>` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.2.7/src/lib.rs:211:17
    |
211 | #[derive(Debug, Clone, Default)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `WriteOnly<T>`
note: required by a bound in `Clone`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `WriteOnly<T>` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.2.7/src/lib.rs:211:24
    |
211 | #[derive(Debug, Clone, Default)]
    |                        ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `WriteOnly<T>`
note: required by a bound in `Default`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`
    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `TlsTemplate` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/mod.rs:103:24
    |
103 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `TlsTemplate`
note: required by a bound in `core::marker::Copy`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/marker.rs:383:17
    |
383 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `core::marker::Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs:81:10
    |
81  | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs:81:10
    |
81  | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `core::fmt::Error`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.2.7/src/lib.rs:37:10
    |
37  | #[derive(Debug, Default)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.2.7/src/lib.rs:37:10
    |
37  | #[derive(Debug, Default)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `core::fmt::Error`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/mod.rs:22:10
    |
22  | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.2.7/src/lib.rs:154:10
    |
154 | #[derive(Debug, Clone, Default)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/mod.rs:22:10
    |
22  | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `core::fmt::Error`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.2.7/src/lib.rs:154:10
    |
154 | #[derive(Debug, Clone, Default)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `core::fmt::Error`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.2.7/src/lib.rs:211:10
    |
211 | #[derive(Debug, Clone, Default)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.2.7/src/lib.rs:211:10
    |
211 | #[derive(Debug, Clone, Default)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `core::fmt::Error`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0152, E0277.
For more information about an error, try `rustc --explain E0152`.
error[E0277]: the size for values of type `TlsTemplate` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/mod.rs:55:23
    |
55  |         tls_template: Option<TlsTemplate>,
    |                       ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `TlsTemplate`
note: required by a bound in `Option`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `MutexGuard<'_, T>` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs:179:31
    |
179 |     pub fn try_lock(&self) -> Option<MutexGuard<T>>
    |                               ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `MutexGuard<'_, T>`
note: required by a bound in `Option`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `TlsTemplate` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/mod.rs:81:35
    |
81  |     pub fn tls_template(&self) -> Option<TlsTemplate> {
    |                                   ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `TlsTemplate`
note: required by a bound in `Option`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs:199:46
    |
199 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs:199:46
    |
199 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `core::fmt::Error`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/mod.rs:103:10
    |
103 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error: could not compile `volatile` due to 13 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/mod.rs:103:10
    |
103 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `core::fmt::Error`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `MemoryRegion` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:90:17
    |
90  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `MemoryRegion`
note: required by a bound in `Clone`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `MemoryRegion` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:90:24
    |
90  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `MemoryRegion`
note: required by a bound in `core::marker::Copy`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/marker.rs:383:17
    |
383 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `core::marker::Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `FrameRange` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:113:10
    |
113 | #[derive(Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `FrameRange`
note: required by a bound in `Clone`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `FrameRange` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:113:17
    |
113 | #[derive(Clone, Copy, PartialEq, Eq)]
    |                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `FrameRange`
note: required by a bound in `core::marker::Copy`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/marker.rs:383:17
    |
383 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `core::marker::Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `MemoryRegionType` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:168:17
    |
168 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `MemoryRegionType`
note: required by a bound in `Clone`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `MemoryRegionType` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:168:24
    |
168 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `MemoryRegionType`
note: required by a bound in `core::marker::Copy`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/marker.rs:383:17
    |
383 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `core::marker::Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `E820MemoryRegion` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:208:17
    |
208 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                 ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `E820MemoryRegion`
note: required by a bound in `Clone`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `E820MemoryRegion` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:208:24
    |
208 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `E820MemoryRegion`
note: required by a bound in `core::marker::Copy`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/marker.rs:383:17
    |
383 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `core::marker::Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `E820MemoryRegion` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:217:6
    |
217 | impl From<E820MemoryRegion> for MemoryRegion {
    |      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `E820MemoryRegion`
note: required by a bound in `From`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:16
    |
543 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`

error[E0277]: the size for values of type `MemoryRegion` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:217:6
    |
217 | impl From<E820MemoryRegion> for MemoryRegion {
    |      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `MemoryRegion`
note: required by a bound in `From`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs:543:20
    |
543 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:84:46
    |
84  |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `RwLock<T>` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:353:27
    |
353 | impl<T: ?Sized + Default> Default for RwLock<T> {
    |                           ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `RwLock<T>`
note: required by a bound in `Default`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/default.rs:103:20
    |
103 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:84:46
    |
84  |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `core::fmt::Error`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:90:10
    |
90  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:543:6
    |
543 | ) -> Result<usize, usize> {
    |      ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:72:10
    |
72  | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:90:10
    |
90  | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `core::fmt::Error`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:72:10
    |
72  | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `core::fmt::Error`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:157:46
    |
157 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:81:10
    |
81  | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:157:46
    |
157 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `core::fmt::Error`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:81:10
    |
81  | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `core::fmt::Error`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:168:10
    |
168 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:97:10
    |
97  | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:168:10
    |
168 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `core::fmt::Error`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:208:10
    |
208 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:97:10
    |
97  | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `core::fmt::Error`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:208:10
    |
208 | #[derive(Debug, Clone, Copy, PartialEq, Eq)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `core::fmt::Error`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `RwLockReadGuard<'_, T>` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:198:31
    |
198 |     pub fn try_read(&self) -> Option<RwLockReadGuard<T>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `RwLockReadGuard<'_, T>`
note: required by a bound in `Option`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `RwLockWriteGuard<'_, T>` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:240:51
    |
240 |     fn try_write_internal(&self, strong: bool) -> Option<RwLockWriteGuard<T>> {
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `RwLockWriteGuard<'_, T>`
note: required by a bound in `Option`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `RwLockWriteGuard<'_, T>` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:309:32
    |
309 |     pub fn try_write(&self) -> Option<RwLockWriteGuard<T>> {
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `RwLockWriteGuard<'_, T>`
note: required by a bound in `Option`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `RwLockUpgradeableGuard<'_, T>` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:327:43
    |
327 |     pub fn try_upgradeable_read(&self) -> Option<RwLockUpgradeableGuard<T>> {
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `RwLockUpgradeableGuard<'_, T>`
note: required by a bound in `Option`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:343:46
    |
343 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:343:46
    |
343 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `core::fmt::Error`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `RwLockWriteGuard<'rwlock, T>` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:361:52
    |
361 |     fn try_upgrade_internal(self, strong: bool) -> Result<RwLockWriteGuard<'rwlock, T>, Self> {
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `RwLockWriteGuard<'rwlock, T>`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `RwLockUpgradeableGuard<'rwlock, T>` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:361:52
    |
361 |     fn try_upgrade_internal(self, strong: bool) -> Result<RwLockWriteGuard<'rwlock, T>, Self> {
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `RwLockUpgradeableGuard<'rwlock, T>`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `RwLockWriteGuard<'rwlock, T>` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:420:33
    |
420 |     pub fn try_upgrade(self) -> Result<RwLockWriteGuard<'rwlock, T>, Self> {
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `RwLockWriteGuard<'rwlock, T>`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `RwLockUpgradeableGuard<'rwlock, T>` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:420:33
    |
420 |     pub fn try_upgrade(self) -> Result<RwLockWriteGuard<'rwlock, T>, Self> {
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `RwLockUpgradeableGuard<'rwlock, T>`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error: could not compile `bootloader` due to 29 previous errors
error[E0277]: the size for values of type `T` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs:23:22
    |
23  |     data: UnsafeCell<Option<T>>, // TODO remove option and use mem::uninitialized
    |                      ^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `Option`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
help: consider restricting type parameter `T`
    |
21  | pub struct Once<T: core::marker::Sized> {
    |                  +++++++++++++++++++++

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs:27:46
    |
27  |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `core::fmt::Error` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs:27:46
    |
27  |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `core::fmt::Error`
note: required by a bound in `Result`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs:99:18
    |
99  |         where F: FnOnce() -> T
    |                  ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `FnOnce`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/function.rs:243:18
    |
243 | pub trait FnOnce<Args> {
    |                  ^^^^ required by this bound in `FnOnce`

error[E0277]: the size for values of type `&'a T` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs:136:33
    |
136 |     pub fn try<'a>(&'a self) -> Option<&'a T> {
    |                                 ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `&'a T`
note: required by a bound in `Option`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `&'a T` cannot be known at compilation time
   --> /Users/barun/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs:145:34
    |
145 |     pub fn wait<'a>(&'a self) -> Option<&'a T> {
    |                                  ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `&'a T`
note: required by a bound in `Option`
   --> /Users/barun/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error: could not compile `spin` due to 31 previous errors
